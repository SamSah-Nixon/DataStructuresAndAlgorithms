 // Source code is unavailable, and was generated by the Fernflower decompiler.
 public class Main {
    private static int testPassed = 0;
    private static double totalTest = 24.0D;
 
    public static void main(String[] var0) {
       System.out.println("----------------------");
       System.out.println("--- Starting Point ---");
       System.out.println("----------------------");
       BinaryTree var1 = new BinaryTree();
       System.out.println("Created BinaryTree<String> myTree");
       System.out.println("size: " + var1.size());
       System.out.println("is Empty?: " + var1.isEmpty());
       testFunction(var1.isEmpty()+"", "true");
       testFunction(var1.toString(), "[]");
       System.out.println("\r\n----------------------");
       System.out.println("--- insert(item) ---");
       System.out.println("----------------------");
       System.out.println("Inserting element sally:");
       var1.insert("sally");
       testFunction(var1.toString(), "[(null, sally)]");
       System.out.println("Inserting element jake:");
       var1.insert("jake");
       testFunction(var1.toString(), "[(null, sally), (sally, jake)]");
       System.out.println("Inserting element winston:");
       var1.insert("winston");
       testFunction(var1.toString(), "[(null, sally), (sally, jake), (sally, winston)]");
       System.out.println("Inserting element hondo:");
       var1.insert("hondo");
       testFunction(var1.toString(), "[(null, sally), (sally, jake), (sally, winston), (jake, hondo)]");
       System.out.println("Inserting element bishop:");
       var1.insert("bishop");
       testFunction(var1.toString(), "[(null, sally), (sally, jake), (sally, winston), (jake, hondo), (jake, bishop)]");
       System.out.println("Inserting element alice:");
       var1.insert("alice");
       testFunction(var1.toString(), "[(null, sally), (sally, jake), (sally, winston), (jake, hondo), (jake, bishop), (winston, alice)]");
       System.out.println("Testing Size:\t");
       testFunction(var1.size()+"", "6");
       System.out.println("\r\n----------------------");
       System.out.println("--- breadthFirstSearch(item) ---");
       System.out.println("----------------------");
       System.out.println("Searching for element duncan: ");
       testFunction(var1.breadthFirstSearch("duncan")+"", "false");
       System.out.println("Searching for element alice: ");
       testFunction(var1.breadthFirstSearch("alice")+"", "true");
       System.out.println("Searching for element jake: ");
       testFunction(var1.breadthFirstSearch("jake")+"", "true");
       System.out.println("Searching for element felicia: ");
       testFunction(var1.breadthFirstSearch("felicia")+"", "false");
       System.out.println("Testing Size:\t");
       testFunction(var1.size()+"", "6");
       var1.insert("felicia");
       var1.insert("duncan");
       System.out.println("\r\n----------------------");
       System.out.println("--- delete(item) ---");
       System.out.println("----------------------");
       System.out.println("Removing element jake:");
       var1.delete("jake");
       testFunction(var1.toString(), "[(null, sally), (sally, duncan), (sally, winston), (duncan, hondo), (duncan, bishop), (winston, alice), (winston, felicia)]");
       System.out.println("Removing element alice:");
       var1.delete("alice");
       testFunction(var1.toString(), "[(null, sally), (sally, duncan), (sally, winston), (duncan, hondo), (duncan, bishop), (winston, felicia)]");
       System.out.println("Removing element Duncan:");
       var1.delete("Duncan");
       testFunction(var1.toString(), "[(null, sally), (sally, duncan), (sally, winston), (duncan, hondo), (duncan, bishop), (winston, felicia)]");
       System.out.println("Testing Size:\t");
       testFunction(var1.size()+"", "6");
       System.out.println("\r\n----------------------");
       System.out.println("--- depthFirstSearch(item, order) ---");
       System.out.println("----------------------");
       System.out.println("Searching for element duncan: ");
       testFunction(var1.depthFirstSearch("duncan", 1)+"", "true");
       System.out.println("Searching for element alice: ");
       testFunction(var1.depthFirstSearch("alice", 2)+"", "false");
       System.out.println("Searching for element jake: ");
       testFunction(var1.depthFirstSearch("jake", 3)+"", "false");
       System.out.println("Searching for element felicia: ");
       testFunction(var1.depthFirstSearch("felicia", 1)+"", "true");
       System.out.println("Searching for element xander: ");
       testFunction(var1.depthFirstSearch("xander", 3)+"", "false");
       System.out.println("Testing Size:\t");
       testFunction(var1.size()+"", "6");
       System.out.println("\r\nTest Passed: " + testPassed + " out of " + totalTest + ": \r\n\t\t" + (double)testPassed / totalTest * 100.0D + "%");
    }
 
    public static void testFunction(String var0, String var1) {
       if (var0.equals(var1)) {
          System.out.println("PASS: expected output matches actual");
          ++testPassed;
       } else {
          System.out.println("FAIL: Output does not match, check your algorithm. ");
          System.out.println("   -  Your output:     " + var0);
          System.out.println("   -  Expected output: " + var1);
       }
 
    }
 }
 